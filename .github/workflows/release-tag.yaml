name: Release

on:
  pull_request:
    types: [closed]

jobs:
  tag:
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true && startsWith(github.event.pull_request.head.ref, 'release')
    steps:
      - name: Split branch name
        env:
          BRANCH: ${{ github.ref_name }}
<<<<<<< Updated upstream
        run: echo "VERSION=v${BRANCH##*/}" >> $GITHUB_STATE
      - name: Checkout repository code
        uses: actions/checkout@v3
        fetch-depth: 0
      - name: Tag Release
        run: |
          git config --global user.name "abc"
          git config --global user.email "abc@example.com"
          git tag -d ${{env.VERSION}} 2> /dev/null || echo 'local ref does not exist'
          git push origin :${{env.VERSION}} 2> /dev/null || echo 'remote ref does not exist'
          git tag ${{env.VERSION}}
          git push origin ${{env.VERSION}}
=======
        id: split
        run: echo "::set-output name=version::${BRANCH##*/}"
      - name: Checkout repository code
        uses: actions/checkout@v3
      - name: Tag Release
        env:
          VERSION: ${{ steps.split.outputs.version }}
        run: |
          git tag -a "v${VERSION}" -m "v${VERSION}"
          git push origin "v${VERSION}"
>>>>>>> Stashed changes
